<?xml version="1.0" encoding="utf-8" ?>
<examples>
    <example>
        <code>Find-CTEvent</code>
        <description>Returns all events that have occurred over the last seven days. The cmdlet by default automatically makes multiple calls to deliver all events, exiting when the service indicates no further data is available.</description>
    </example>
    <example>
        <code>Find-CTEvent -Region eu-central-1</code>
        <description>Returns all events that have occurred over the last seven days specifying a region that is not the current shell default.</description>
    </example>
    <example>
        <code>Find-CTEvent -LookupAttribute @{ AttributeKey="EventName"; AttributeValue="RunInstances" }</code>
        <description>Returns all events that are associated with the RunInstances API call.</description>
    </example>
    <example>
        <code>Find-CTEvent -MaxResult 5</code>
        <description>Returns the first 5 available events. The token to use to retrieve further events is attached as a note property named 'NextToken' to the $AWSHistory.LastServiceResponse member.</description>
    </example>
    <example>
        <code>Find-CTEvent -MaxResult 10 -NextToken $AWSHistory.LastServiceResponse.NextToken</code>
        <description>Returns the next 10 events using the 'next page' token from a previous call to indicate where to start returning events from in the sequence.</description>
    </example>
    <example>
        <code>
$nextToken = $null
do
{        
    Find-CTEvent -MaxResult 5 -NextToken $nextToken
    $nextToken = $AWSHistory.LastServiceResponse.NextToken
} while ($nextToken -ne $null)    
        </code>
        <description>This example shows how to loop through the available events using manual paging, fetching a maximum of 5 events per call.</description>
    </example>
</examples>
