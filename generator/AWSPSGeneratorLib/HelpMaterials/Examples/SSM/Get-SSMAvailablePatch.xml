<?xml version="1.0" encoding="utf-8" ?>
<examples>
    <example>
        <code>PS C:\> $filter1 = @{Key="PRODUCT";Values=@("WindowsServer2012")}
PS C:\> $filter2 = @{Key="MSRC_SEVERITY";Values=@("Critical")}

PS C:\> Get-SSMAvailablePatch -Filter $filter1,$filter2

Classification : SecurityUpdates
ContentUrl     : https://support.microsoft.com/en-us/kb/2727528
Description    : A security issue has been identified that could allow an unauthenticated remote attacker to compromise your system and gain control
                 over it. You can help protect your system by installing this update from Microsoft. After you install this update, you may have to
                 restart your system.
Id             : 1eb507be-2040-4eeb-803d-abc55700b715
KbNumber       : KB2727528
Language       : All
MsrcNumber     : MS12-072
MsrcSeverity   : Critical
Product        : WindowsServer2012
ProductFamily  : Windows
ReleaseDate    : 11/13/2012 6:00:00 PM
Title          : Security Update for Windows Server 2012 (KB2727528)
Vendor         : Microsoft
...</code>
        <description>This example gets all available patches for Windows Server 2012 that have a MSRC severity of Critical. The syntax used by this example requires PowerShell version 3 or later.</description>
    </example>
	    <example>
        <code>PS C:\> $filter1 = New-Object Amazon.SimpleSystemsManagement.Model.PatchOrchestratorFilter
PS C:\> $filter1.Key = "PRODUCT"
PS C:\> $filter1.Values = "WindowsServer2012"
PS C:\> $filter2 = New-Object Amazon.SimpleSystemsManagement.Model.PatchOrchestratorFilter
PS C:\> $filter2.Key = "MSRC_SEVERITY"
PS C:\> $filter2.Values = "Critical"

PS C:\> Get-SSMAvailablePatch -Filter $filter1,$filter2</code>
        <description>With PowerShell version 2, you must use New-Object to create each filter.</description>
    </example>
</examples>
